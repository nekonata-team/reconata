import requests
from google.genai import Client

from .prompt_provider.post_process_prompt_provider import PostProcessPromptProvider


class WorkingOutLoud:
    """
    - Working Out Loudのポストプロセス
    - ツイートのような要約を生成する
    """

    def __init__(
        self,
        api_key: str,
        webhook_url: str,
        post_process_prompt_provider: PostProcessPromptProvider,
    ):
        self.creator = _GeminiPostCreator(
            api_key=api_key,
            post_process_prompt_provider=post_process_prompt_provider,
        )
        self.webhook_url = webhook_url

    def __call__(
        self,
        meeting_notes: str,
    ):
        post_content = self.creator.generate_post(meeting_notes=meeting_notes)

        payload = {
            "embeds": [
                {
                    "description": post_content,
                    "title": "📝 Working Out Loud",
                    "color": 0x1ABC9C,
                    "footer": {"text": "Generated by Google Gemini"},
                }
            ]
        }
        headers = {"Content-Type": "application/json"}
        try:
            response = requests.post(self.webhook_url, json=payload, headers=headers)
            response.raise_for_status()
        except requests.RequestException as e:
            raise RuntimeError(
                f"Discord Webhook (embed) へのポストに失敗しました: {e}"
            ) from e


class _GeminiPostCreator:
    def __init__(
        self,
        api_key: str,
        post_process_prompt_provider: PostProcessPromptProvider,
    ):
        self.client = Client(api_key=api_key)
        self.prompt_provider = post_process_prompt_provider

    def generate_post(self, meeting_notes: str) -> str:
        prompt = self.prompt_provider.get_prompt(meeting_notes)
        try:
            response = self.client.models.generate_content(
                model="gemini-2.0-flash", contents=prompt
            )
            content = response.text
            if content is None:
                raise RuntimeError("Google Gemini API の応答が無効です")
            return content
        except Exception as e:
            raise RuntimeError(
                "Google Gemini API を用いたポスト作成に失敗しました"
            ) from e
